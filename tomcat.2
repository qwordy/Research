commit 727260af512f3b1290434ea280e972f0a3e0f55c
Author: Filip Hanik <fhanik@apache.org>
Date:   Fri Nov 14 15:18:19 2008 +0000

    use atomic counters

diff --git a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
index ad386ad..24bba9e 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
@@ -19,12 +19,13 @@ package org.apache.tomcat.jdbc.pool;
 
 import java.lang.reflect.Method;
 import java.util.Properties;
+import java.util.concurrent.atomic.AtomicInteger;
 /**
  * @author Filip Hanik
  *
  */
 public class PoolProperties {
-    protected static volatile int poolCounter = 1;
+    protected static AtomicInteger poolCounter = new AtomicInteger(0);
     protected Properties dbProperties = new Properties();
     protected String url = null;
     protected String driverClassName = null;
@@ -50,7 +51,7 @@ public class PoolProperties {
     protected int removeAbandonedTimeout = 60;
     protected boolean logAbandoned = false;
     protected int loginTimeout = 10000;
-    protected String name = "Tomcat Connection Pool["+(poolCounter++)+"]";
+    protected String name = "Tomcat Connection Pool["+(poolCounter.addAndGet(1))+"]";
     protected String password;
     protected String username;
     protected long validationInterval = 30000;
diff --git a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
index 364eeee..3654bf2 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
@@ -38,7 +38,7 @@ public class PooledConnection {
     public static final int VALIDATE_INIT = 4;
 
     protected static Log log = LogFactory.getLog(PooledConnection.class);
-    protected static volatile int counter = 1;
+    protected static AtomicInteger counter = new AtomicInteger(01);
 
     protected PoolProperties poolProperties;
     protected java.sql.Connection connection;
@@ -53,7 +53,7 @@ public class PooledConnection {
     protected WeakReference<JdbcInterceptor> handler = null;
 
     public PooledConnection(PoolProperties prop, ConnectionPool parent) throws SQLException {
-        instanceCount = counter++;
+        instanceCount = counter.addAndGet(1);
         poolProperties = prop;
         this.parent = parent;
     }
