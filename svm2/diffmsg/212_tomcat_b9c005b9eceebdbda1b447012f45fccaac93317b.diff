commit b9c005b9eceebdbda1b447012f45fccaac93317b
Author: Mark Emlyn David Thomas <markt@apache.org>
Date:   Wed Aug 21 20:24:24 2013 +0000

    Use a common wait time on the server and the client.
    This fixes an exception observed on some platforms with 7.0.x that distracted from the root cause of the test failure.
    
    git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1516295 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/test/org/apache/tomcat/websocket/TestWebSocketFrameClient.java b/test/org/apache/tomcat/websocket/TestWebSocketFrameClient.java
index 23008ab..622c152 100644
--- a/test/org/apache/tomcat/websocket/TestWebSocketFrameClient.java
+++ b/test/org/apache/tomcat/websocket/TestWebSocketFrameClient.java
@@ -76,7 +76,8 @@ public class TestWebSocketFrameClient extends TomcatBaseTest {
 
         // Ignore the latch result as the message count test below will tell us
         // if the right number of messages arrived
-        handler.getLatch().await(60, TimeUnit.SECONDS);
+        handler.getLatch().await(TesterFirehoseServer.WAIT_TIME_MILLIS,
+                TimeUnit.MILLISECONDS);
 
         List<String> messages = handler.getMessages();
         Assert.assertEquals(
diff --git a/test/org/apache/tomcat/websocket/TesterFirehoseServer.java b/test/org/apache/tomcat/websocket/TesterFirehoseServer.java
index df2f188..abe9d81 100644
--- a/test/org/apache/tomcat/websocket/TesterFirehoseServer.java
+++ b/test/org/apache/tomcat/websocket/TesterFirehoseServer.java
@@ -38,6 +38,7 @@ public class TesterFirehoseServer {
     public static final int MESSAGE_COUNT = 100000;
     public static final String MESSAGE;
     public static final int MESSAGE_SIZE = 1024;
+    public static final int WAIT_TIME_MILLIS = 60000;
 
     static {
         StringBuilder sb = new StringBuilder(MESSAGE_SIZE);
@@ -87,6 +88,10 @@ public class TesterFirehoseServer {
                 }
             }
 
+            session.getUserProperties().put(
+                    "org.apache.tomcat.websocket.BLOCKING_SEND_TIMEOUT",
+                    Long.valueOf(WAIT_TIME_MILLIS));
+
             Basic remote = session.getBasicRemote();
             remote.setBatchingAllowed(true);
 
