commit f5fab1f64ba11e04e52bd6251ca62fc854e9578c
Author: Mark Thomas <markt@apache.org>
Date:   Mon Jan 11 17:35:29 2016 +0000

    Whoops. Fix regression in r1724015.
    Code was used although I can't see why a simple AtomicInteger wasn't sufficient.
    
    git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1724094 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java b/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
index 00c7884..7d3f101 100644
--- a/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
+++ b/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
@@ -25,7 +25,7 @@ import java.security.cert.X509Certificate;
 import java.util.ArrayList;
 import java.util.Base64;
 import java.util.List;
-import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
+import java.util.concurrent.atomic.AtomicInteger;
 
 import javax.net.ssl.KeyManager;
 import javax.net.ssl.SSLEngine;
@@ -84,10 +84,10 @@ public class OpenSSLContext implements org.apache.tomcat.util.net.SSLContext {
     }
 
     private final long aprPool;
+    private final AtomicInteger aprPoolDestroyed = new AtomicInteger(0);
+
     protected final long ctx;
 
-    private static final AtomicIntegerFieldUpdater<OpenSSLContext> DESTROY_UPDATER
-            = AtomicIntegerFieldUpdater.newUpdater(OpenSSLContext.class, "aprPoolDestroyed");
     static final CertificateFactory X509_CERT_FACTORY;
 
     private static final String BEGIN_KEY = "-----BEGIN RSA PRIVATE KEY-----\n";
@@ -171,7 +171,7 @@ public class OpenSSLContext implements org.apache.tomcat.util.net.SSLContext {
     @Override
     public synchronized void destroy() {
         // Guard against multiple destroyPools() calls triggered by construction exception and finalize() later
-        if (DESTROY_UPDATER.compareAndSet(this, 0, 1)) {
+        if (aprPoolDestroyed.compareAndSet(0, 1)) {
             if (ctx != 0) {
                 SSLContext.free(ctx);
             }
