commit c94953af1cf48c0f4d9f63241d07e81e885efcf5
Author: Filip Hanik <fhanik@apache.org>
Date:   Fri Jul 14 05:14:31 2006 +0000

    While this change made my linux box go faster, I could constantly crash my windows VM, so it will have to wait
    
    
    git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@421808 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/java/org/apache/tomcat/util/net/NioEndpoint.java b/java/org/apache/tomcat/util/net/NioEndpoint.java
index 48278ae..8301cbd 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -39,7 +39,6 @@ import org.apache.tomcat.jni.Poll;
 import org.apache.tomcat.jni.SSL;
 import org.apache.tomcat.jni.Status;
 import org.apache.tomcat.util.res.StringManager;
-import java.util.concurrent.ConcurrentLinkedQueue;
 
 /**
  * NIO tailored thread pool, providing the following services:
@@ -966,7 +965,7 @@ public class NioEndpoint {
     public class Poller implements Runnable {
 
         protected Selector selector;
-        protected ConcurrentLinkedQueue<Runnable> events = new ConcurrentLinkedQueue<Runnable>();
+        protected LinkedList<Runnable> events = new LinkedList<Runnable>();
         protected boolean close = false;
         protected long nextExpiration = 0;//optimize expiration handling
 
@@ -1007,7 +1006,9 @@ public class NioEndpoint {
         }
         
         public void addEvent(Runnable event) {
-            events.add(event);
+            synchronized (events) {
+                events.add(event);
+            }
             selector.wakeup();
         }
 
@@ -1043,13 +1044,16 @@ public class NioEndpoint {
         }
 
         public void events() {
-            Runnable r = null;
-            while ( (events.size() > 0) && (r = events.poll()) != null ) {
-                try {
-                    r.run();
-                } catch ( Exception x ) {
-                    log.error("",x);
+            synchronized (events) {
+                Runnable r = null;
+                while ( (events.size() > 0) && (r = events.removeFirst()) != null ) {
+                    try {
+                        r.run();
+                    } catch ( Exception x ) {
+                        log.error("",x);
+                    }
                 }
+                events.clear();
             }
         }
         
@@ -1066,7 +1070,9 @@ public class NioEndpoint {
                 }
     
             };
-            events.add(r);
+            synchronized (events) {
+                events.add(r);
+            }
             selector.wakeup();
         }
         
