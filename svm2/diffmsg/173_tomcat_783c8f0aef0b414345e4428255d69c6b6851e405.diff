commit 783c8f0aef0b414345e4428255d69c6b6851e405
Author: Mark Thomas <markt@apache.org>
Date:   Wed Feb 18 12:14:24 2015 +0000

    registered is guarded by registeredLock so there is no need for it to be volatile.
    Simplify the process of triggering the first call to onWritePossible
    
    git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1660609 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java b/java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java
index 49aba00..6c05a34 100644
--- a/java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java
+++ b/java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java
@@ -99,7 +99,6 @@ public class UpgradeProcessor implements Processor, WebConnection {
     public final SocketState upgradeDispatch(SocketStatus status) {
         if (status == SocketStatus.OPEN_READ) {
             upgradeServletInputStream.onDataAvailable();
-            upgradeServletOutputStream.checkWriteDispatch();
         } else if (status == SocketStatus.OPEN_WRITE) {
             upgradeServletOutputStream.onWritePossible();
         } else if (status == SocketStatus.STOP) {
diff --git a/java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java b/java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java
index 5264990..34775b7 100644
--- a/java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java
+++ b/java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java
@@ -55,12 +55,7 @@ public class UpgradeServletOutputStream extends ServletOutputStream {
     private volatile WriteListener listener = null;
 
     // Guarded by registeredLock
-    private volatile boolean registered = false;
-
-    // Use to track if a dispatch needs to be arranged to trigger the first call
-    // to onWritePossible. If the socket gets registered for write while this is
-    // set then this will be ignored.
-    private volatile boolean writeDispatchRequired = false;
+    private boolean registered = false;
 
     private volatile ClassLoader applicationLoader = null;
 
@@ -110,7 +105,10 @@ public class UpgradeServletOutputStream extends ServletOutputStream {
         }
         // Container is responsible for first call to onWritePossible() but only
         // need to do this if setting the listener for the first time.
-        writeDispatchRequired = true;
+        synchronized (registeredLock) {
+            registered = true;
+            socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);
+        }
 
         this.listener = listener;
         this.applicationLoader = Thread.currentThread().getContextClassLoader();
@@ -265,16 +263,4 @@ public class UpgradeServletOutputStream extends ServletOutputStream {
             }
         }
     }
-
-
-    void checkWriteDispatch() {
-        synchronized (registeredLock) {
-            if (writeDispatchRequired) {
-                writeDispatchRequired = false;
-                if (!registered) {
-                    socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);
-                }
-            }
-        }
-    }
 }
