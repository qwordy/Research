commit 3eb039c33fd0aa6d21c48f6b2e55a939e4df3aea
Author: Mark Thomas <markt@apache.org>
Date:   Fri Nov 20 20:28:51 2015 +0000

    Correctly notify the MapperListener associated with a Service if the
    Engine for that Service is changed.
    
    git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1715417 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/java/org/apache/catalina/core/LocalStrings.properties b/java/org/apache/catalina/core/LocalStrings.properties
index 6df94be..91dba6e 100644
--- a/java/org/apache/catalina/core/LocalStrings.properties
+++ b/java/org/apache/catalina/core/LocalStrings.properties
@@ -194,6 +194,10 @@ standardService.connector.initFailed=Failed to initialize connector [{0}]
 standardService.connector.pauseFailed=Failed to pause connector [{0}]
 standardService.connector.startFailed=Failed to start connector [{0}]
 standardService.connector.stopFailed=Failed to stop connector [{0}]
+standardService.engine.startFailed=Failed to start associated Engine
+standardService.engine.stopFailed=Failed to stop associated Engine
+standardService.mapperListener.startFailed=Failed to start associated MapperListener
+standardService.mapperListener.stopFailed=Failed to stop associated MapperListener
 standardService.start.name=Starting service {0}
 standardService.stop.name=Stopping service {0}
 standardWrapper.allocate=Error allocating a servlet instance
diff --git a/java/org/apache/catalina/core/StandardService.java b/java/org/apache/catalina/core/StandardService.java
index ab7a8e9..99092e8 100644
--- a/java/org/apache/catalina/core/StandardService.java
+++ b/java/org/apache/catalina/core/StandardService.java
@@ -129,18 +129,31 @@ public class StandardService extends LifecycleMBeanBase implements Service {
         if (this.engine != null) {
             this.engine.setService(this);
         }
-        if (getState().isAvailable() && (this.engine != null)) {
+        if (getState().isAvailable()) {
+            if (this.engine != null) {
+                try {
+                    this.engine.start();
+                } catch (LifecycleException e) {
+                    log.warn(sm.getString("standardService.engine.startFailed"), e);
+                }
+            }
+            // Restart MapperListener to pick up new engine.
             try {
-                this.engine.start();
+                mapperListener.stop();
             } catch (LifecycleException e) {
-                // Ignore
+                log.warn(sm.getString("standardService.mapperListener.stopFailed"), e);
             }
-        }
-        if (getState().isAvailable() && (oldEngine != null)) {
             try {
-                oldEngine.stop();
+                mapperListener.start();
             } catch (LifecycleException e) {
-                // Ignore
+                log.warn(sm.getString("standardService.mapperListener.startFailed"), e);
+            }
+            if (oldEngine != null) {
+                try {
+                    oldEngine.stop();
+                } catch (LifecycleException e) {
+                    log.warn(sm.getString("standardService.engine.stopFailed"), e);
+                }
             }
         }
 
diff --git a/webapps/docs/changelog.xml b/webapps/docs/changelog.xml
index b23a9cb..3535699 100644
--- a/webapps/docs/changelog.xml
+++ b/webapps/docs/changelog.xml
@@ -70,6 +70,10 @@
         <bug>58629</bug>: Allow an embedded Tomcat instance to start when the
         <code>Service</code> has no <code>Engine</code> configured. (markt)
       </fix>
+      <fix>
+        Correctly notify the MapperListener associated with a Service if the
+        Engine for that Service is changed. (markt)
+      </fix>
     </changelog>
   </subsection>
   <subsection name="Coyote">
