commit 1ef6f147349c145542d77c987f57e1dfbd405406
Author: Trustin Lee <t@motd.kr>
Date:   Sun Dec 7 16:00:35 2014 +0900

    Trigger exceptionCaught() when VoidChannelPromise fails
    
    Related: #3190
    
    Motivation:
    
    When an outbound handler method raises an exception, its promise is
    marked as failed.  If the promise is done already, the exception is
    logged.
    
    When the promise is void, exceptionCaught() must be triggered to notify
    a user. However, ChannelHandlerInvokerUtil simply swallows it.
    
    Modifications:
    
    Do not swallow an exception when the promise is void.
    
    Result:
    
    A user who uses a void promise for an outbound operation will be
    notified on failure.

diff --git a/transport/src/main/java/io/netty/channel/ChannelHandlerInvokerUtil.java b/transport/src/main/java/io/netty/channel/ChannelHandlerInvokerUtil.java
index 29db91a..86e3e26 100644
--- a/transport/src/main/java/io/netty/channel/ChannelHandlerInvokerUtil.java
+++ b/transport/src/main/java/io/netty/channel/ChannelHandlerInvokerUtil.java
@@ -220,13 +220,7 @@ public final class ChannelHandlerInvokerUtil {
     }
 
     private static void notifyOutboundHandlerException(Throwable cause, ChannelPromise promise) {
-        // only try to fail the promise if its not a VoidChannelPromise, as
-        // the VoidChannelPromise would also fire the cause through the pipeline
-        if (promise instanceof VoidChannelPromise) {
-            return;
-        }
-
-        if (!promise.tryFailure(cause)) {
+        if (!promise.tryFailure(cause) && !(promise instanceof VoidChannelPromise)) {
             if (logger.isWarnEnabled()) {
                 logger.warn("Failed to fail the promise because it's done already: {}", promise, cause);
             }
