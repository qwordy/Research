commit cffbba94ee476b87a3932d2d5a975e55714657f9
Author: Norman Maurer <nmaurer@redhat.com>
Date:   Fri Jul 26 14:10:31 2013 +0200

    [#1654] Remove AbstractChannel.doPreClose() and notify close future on register failure. Based on patch of @jpinner

diff --git a/transport/src/main/java/io/netty/channel/AbstractChannel.java b/transport/src/main/java/io/netty/channel/AbstractChannel.java
index 4f544bc..f59f3f2 100644
--- a/transport/src/main/java/io/netty/channel/AbstractChannel.java
+++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java
@@ -415,6 +415,7 @@ public abstract class AbstractChannel extends DefaultAttributeMap implements Cha
                             "Force-closing a channel whose registration task was unaccepted by an event loop: {}",
                             AbstractChannel.this, t);
                     closeForcibly();
+                    closeFuture.setClosed();
                     promise.setFailure(t);
                 }
             }
@@ -440,12 +441,12 @@ public abstract class AbstractChannel extends DefaultAttributeMap implements Cha
             } catch (Throwable t) {
                 // Close the channel directly to avoid FD leak.
                 closeForcibly();
+                closeFuture.setClosed();
                 if (!promise.tryFailure(t)) {
                     logger.warn(
                             "Tried to fail the registration promise, but it is complete already. " +
                                     "Swallowing the cause of the registration failure:", t);
                 }
-                closeFuture.setClosed();
             }
         }
 
@@ -751,14 +752,6 @@ public abstract class AbstractChannel extends DefaultAttributeMap implements Cha
     protected abstract void doDisconnect() throws Exception;
 
     /**
-     * Will be called before the actual close operation will be performed. Sub-classes may override this as the default
-     * is to do nothing.
-     */
-    protected void doPreClose() throws Exception {
-        // NOOP by default
-    }
-
-    /**
      * Close the {@link Channel}
      */
     protected abstract void doClose() throws Exception;
@@ -834,11 +827,6 @@ public abstract class AbstractChannel extends DefaultAttributeMap implements Cha
         }
 
         boolean setClosed() {
-            try {
-                doPreClose();
-            } catch (Exception e) {
-                logger.warn("doPreClose() raised an exception.", e);
-            }
             return super.trySuccess();
         }
     }
diff --git a/transport/src/main/java/io/netty/channel/local/LocalChannel.java b/transport/src/main/java/io/netty/channel/local/LocalChannel.java
index cc4acb2..93b1d18 100644
--- a/transport/src/main/java/io/netty/channel/local/LocalChannel.java
+++ b/transport/src/main/java/io/netty/channel/local/LocalChannel.java
@@ -199,24 +199,18 @@ public class LocalChannel extends AbstractChannel {
     }
 
     @Override
-    protected void doPreClose() throws Exception {
-        if (state > 2) {
-            // Closed already
-            return;
-        }
-
-        // Update all internal state before the closeFuture is notified.
-        if (localAddress != null) {
-            if (parent() == null) {
-                LocalChannelRegistry.unregister(localAddress);
+    protected void doClose() throws Exception {
+        if (state <= 2) {
+            // Update all internal state before the closeFuture is notified.
+            if (localAddress != null) {
+                if (parent() == null) {
+                    LocalChannelRegistry.unregister(localAddress);
+                }
+                localAddress = null;
             }
-            localAddress = null;
+            state = 3;
         }
-        state = 3;
-    }
 
-    @Override
-    protected void doClose() throws Exception {
         LocalChannel peer = this.peer;
         if (peer != null && peer.isActive()) {
             peer.unsafe().close(unsafe().voidPromise());
diff --git a/transport/src/main/java/io/netty/channel/local/LocalServerChannel.java b/transport/src/main/java/io/netty/channel/local/LocalServerChannel.java
index 7f279cf..fc08285 100644
--- a/transport/src/main/java/io/netty/channel/local/LocalServerChannel.java
+++ b/transport/src/main/java/io/netty/channel/local/LocalServerChannel.java
@@ -94,21 +94,13 @@ public class LocalServerChannel extends AbstractServerChannel {
     }
 
     @Override
-    protected void doPreClose() throws Exception {
-        if (state > 1) {
-            // Closed already.
-            return;
-        }
-
-        // Update all internal state before the closeFuture is notified.
-        LocalChannelRegistry.unregister(localAddress);
-        localAddress = null;
-        state = 2;
-    }
-
-    @Override
     protected void doClose() throws Exception {
-        // All internal state was updated already at doPreClose().
+        if (state <= 1) {
+            // Update all internal state before the closeFuture is notified.
+            LocalChannelRegistry.unregister(localAddress);
+            localAddress = null;
+            state = 2;
+        }
     }
 
     @Override
