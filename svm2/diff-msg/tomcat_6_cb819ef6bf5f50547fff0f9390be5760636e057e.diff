commit cb819ef6bf5f50547fff0f9390be5760636e057e
Author: Mark Thomas <markt@apache.org>
Date:   Wed Apr 27 11:00:08 2016 +0000

    Review of Map / ConcurrentMap / ConcurrentHashMap
    Declare that functions must be thread-safe
    
    git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1741221 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/java/org/apache/el/lang/FunctionMapperImpl.java b/java/org/apache/el/lang/FunctionMapperImpl.java
index a302541..eccb1c0 100644
--- a/java/org/apache/el/lang/FunctionMapperImpl.java
+++ b/java/org/apache/el/lang/FunctionMapperImpl.java
@@ -21,8 +21,8 @@ import java.io.IOException;
 import java.io.ObjectInput;
 import java.io.ObjectOutput;
 import java.lang.reflect.Method;
-import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentMap;
 
 import javax.el.FunctionMapper;
 
@@ -37,7 +37,7 @@ public class FunctionMapperImpl extends FunctionMapper implements
 
     private static final long serialVersionUID = 1L;
 
-    protected Map<String, Function> functions = new ConcurrentHashMap<>();
+    protected ConcurrentMap<String, Function> functions = new ConcurrentHashMap<>();
 
     /*
      * (non-Javadoc)
@@ -84,7 +84,7 @@ public class FunctionMapperImpl extends FunctionMapper implements
     @Override
     public void readExternal(ObjectInput in) throws IOException,
             ClassNotFoundException {
-        this.functions = (Map<String, Function>) in.readObject();
+        this.functions = (ConcurrentMap<String, Function>) in.readObject();
     }
 
     public static class Function implements Externalizable {
