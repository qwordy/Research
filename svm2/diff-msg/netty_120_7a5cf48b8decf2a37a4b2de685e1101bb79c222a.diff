commit 7a5cf48b8decf2a37a4b2de685e1101bb79c222a
Author: Trustin Lee <t@motd.kr>
Date:   Tue Jun 11 17:54:35 2013 +0900

    Implement Promise/Future cancellation properly for outbound traffic
    
    - Related issue: #1432
    - Make sure the Promise of a write operation is not cancellable before writing out

diff --git a/transport/src/main/java/io/netty/channel/AbstractChannel.java b/transport/src/main/java/io/netty/channel/AbstractChannel.java
index 2f7e9d6..4de126c 100644
--- a/transport/src/main/java/io/netty/channel/AbstractChannel.java
+++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java
@@ -684,6 +684,8 @@ public abstract class AbstractChannel extends DefaultAttributeMap implements Cha
                     MessageList<Object> messages = outboundBuffer.currentMessages;
                     int messageIndex = outboundBuffer.currentMessageIndex;
                     int messageCount = messages.size();
+
+                    // Make sure the message list is not empty.
                     if (messageCount == 0) {
                         messages.recycle();
                         promise.trySuccess();
@@ -694,6 +696,17 @@ public abstract class AbstractChannel extends DefaultAttributeMap implements Cha
                         }
                     }
 
+                    // Make sure the promise has not been cancelled yet.
+                    if (!promise.setUncancellable()) {
+                        messages.releaseAllAndRecycle();
+                        if (!outboundBuffer.next()) {
+                            break;
+                        } else {
+                            continue;
+                        }
+                    }
+
+                    // Write the messages.
                     int writtenMessages = doWrite(messages, messageIndex);
                     outboundBuffer.currentMessageIndex = messageIndex += writtenMessages;
                     if (messageIndex >= messageCount) {
