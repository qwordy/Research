commit 3393629eeda2fbc51d3991fa87724ef1ddbcdf01
Author: Trustin Lee <trustin@gmail.com>
Date:   Tue Jun 12 17:25:27 2012 +0900

    Log the cause of exceptionCaught event when failed to notify

diff --git a/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java
index 5f25198..d6f6fad 100644
--- a/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java
+++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java
@@ -577,12 +577,19 @@ final class DefaultChannelHandlerContext extends DefaultAttributeMap implements
                     }
                 }
             } else {
-                executor.execute(new Runnable() {
-                    @Override
-                    public void run() {
-                        fireExceptionCaught(cause);
+                try {
+                    executor.execute(new Runnable() {
+                        @Override
+                        public void run() {
+                            fireExceptionCaught(cause);
+                        }
+                    });
+                } catch (Throwable t) {
+                    if (logger.isWarnEnabled()) {
+                        logger.warn("Failed to submit an exceptionCaught() event.", t);
+                        logger.warn("The exceptionCaught() event that was failed to submit was:", cause);
                     }
-                });
+                }
             }
         } else {
             logger.warn(
diff --git a/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java b/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java
index d4b2c3f..1d5208e 100644
--- a/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java
+++ b/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java
@@ -201,7 +201,7 @@ public abstract class MultithreadEventExecutor implements EventExecutor {
 
     @Override
     public boolean inEventLoop() {
-        return SingleThreadEventExecutor.currentEventLoop() != null;
+        throw new UnsupportedOperationException();
     }
 
     @Override
