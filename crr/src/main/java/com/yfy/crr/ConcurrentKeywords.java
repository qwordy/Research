package com.yfy.crr;

import java.util.Arrays;
import java.util.List;

/**
 * Created by yfy on 10/21/16.
 */
public class ConcurrentKeywords {
  public static void main(String[] args) {
    Util.log(list.size());
  }

  public static List<String> list = Arrays.asList(
      "synchronized",
      "volatile",

      //"wait",
      //"notify",
      "notifyAll",
      "await",
      //"signal",
      "signalAll",

      "Thread",
      "Runnable",

      "BlockingDeque",
      "BlockingQueue",
      "Callable",
      "CompletableFuture",
      "AsynchronousCompletionTask",
      "CompletionService",
      "CompletionStage",
      "ConcurrentMap",
      "ConcurrentNavigableMap",
      "Delayed",
      "Executor",
      "ExecutorService",
      "ForkJoinPool",
      "ForkJoinWorkerThreadFactory",
      "ManagedBlocker",
      "Future",
      "RejectedExecutionHandler",
      "RunnableFuture",
      "RunnableScheduledFuture",
      "ScheduledExecutorService",
      "ScheduledFuture",
      "ThreadFactory",
      "TransferQueue",
//class
      "AbstractExecutorService",
      "ArrayBlockingQueue",
      "CompletableFuture",
      "ConcurrentHashMap",
      "KeySetView",
      "ConcurrentLinkedDeque",
      "ConcurrentLinkedQueue",
      "ConcurrentSkipListMap",
      "ConcurrentSkipListSet",
      "CopyOnWriteArrayList",
      "CopyOnWriteArraySet",
      "CountDownLatch",
      "CountedCompleter",
      "CyclicBarrier",
      "DelayQueue",
      "Exchanger",
      "ExecutorCompletionService",
      "Executors",
      "ForkJoinPool",
      "ForkJoinTask",
      "ForkJoinWorkerThread",
      "FutureTask",
      "LinkedBlockingDeque",
      "LinkedBlockingQueue",
      "LinkedTransferQueue",
      "Phaser",
      "PriorityBlockingQueue",
      "RecursiveAction",
      "RecursiveTask",
      "ScheduledThreadPoolExecutor",
      "Semaphore",
      "SynchronousQueue",
      "ThreadLocalRandom",
      "ThreadPoolExecutor",
      "AbortPolicy",
      "CallerRunsPolicy",
      "DiscardOldestPolicy",
      "DiscardPolicy",

      "AtomicBoolean",
      "AtomicInteger",
      "AtomicIntegerArray",
      "AtomicIntegerFieldUpdater",
      "AtomicLong",
      "AtomicLongArray",
      "AtomicLongFieldUpdater",
      "AtomicMarkableReference",
      "AtomicReference",
      "AtomicReferenceArray",
      "AtomicReferenceFieldUpdater",
      "AtomicStampedReference",
      "DoubleAccumulator",
      "DoubleAdder",
      "LongAccumulator",
      "LongAdder",
//interface
      "Condition",
      "Lock",
      "ReadWriteLock",
      //end
      "AbstractOwnableSynchronizer",
      "AbstractQueuedLongSynchronizer",
      "AbstractQueuedSynchronizer",
      "LockSupport",
      "ReentrantLock",
      "ReentrantReadWriteLock",
      "ReadLock",
      "WriteLock",
      "StampedLock");

  public static List<String> classList = Arrays.asList(
      "AbstractExecutorService",
      "ArrayBlockingQueue",
      "CompletableFuture",
      "ConcurrentHashMap",
      "KeySetView",
      "ConcurrentLinkedDeque",
      "ConcurrentLinkedQueue",
      "ConcurrentSkipListMap",
      "ConcurrentSkipListSet",
      "CopyOnWriteArrayList",
      "CopyOnWriteArraySet",
      "CountDownLatch",
      "CountedCompleter",
      "CyclicBarrier",
      "DelayQueue",
      "Exchanger",
      "ExecutorCompletionService",
      "Executors",
      "ForkJoinPool",
      "ForkJoinTask",
      "ForkJoinWorkerThread",
      "FutureTask",
      "LinkedBlockingDeque",
      "LinkedBlockingQueue",
      "LinkedTransferQueue",
      "Phaser",
      "PriorityBlockingQueue",
      "RecursiveAction",
      "RecursiveTask",
      "ScheduledThreadPoolExecutor",
      "Semaphore",
      "SynchronousQueue",
      "ThreadLocalRandom",
      "ThreadPoolExecutor",
      "AbortPolicy",
      "CallerRunsPolicy",
      "DiscardOldestPolicy",
      "DiscardPolicy",

      "AtomicBoolean",
      "AtomicInteger",
      "AtomicIntegerArray",
      "AtomicIntegerFieldUpdater",
      "AtomicLong",
      "AtomicLongArray",
      "AtomicLongFieldUpdater",
      "AtomicMarkableReference",
      "AtomicReference",
      "AtomicReferenceArray",
      "AtomicReferenceFieldUpdater",
      "AtomicStampedReference",
      "DoubleAccumulator",
      "DoubleAdder",
      "LongAccumulator",
      "LongAdder",

      "AbstractOwnableSynchronizer",
      "AbstractQueuedLongSynchronizer",
      "AbstractQueuedSynchronizer",
      "LockSupport",
      "ReentrantLock",
      "ReentrantReadWriteLock",
      "ReadLock",
      "WriteLock",
      "StampedLock"
  );
}
